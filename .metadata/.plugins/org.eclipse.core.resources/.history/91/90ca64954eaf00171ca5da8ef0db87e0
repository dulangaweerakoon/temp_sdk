/*
 * Empty C++ Application
 */
#include <stdio.h>
#include <xaxidma.h>
#include "xparameters.h"
#include "xdebug.h"
#include <xdocnn.h>
#include <iostream>
#include <fstream>
#include "frame1.h"
#include "frame2.h"
#include "frame3.h"

#define DMA_DEV_ID		XPAR_AXIDMA_0_DEVICE_ID

#ifdef XPAR_V6DDR_0_S_AXI_BASEADDR
#define DDR_BASE_ADDR		XPAR_V6DDR_0_S_AXI_BASEADDR
#elif XPAR_S6DDR_0_S0_AXI_BASEADDR
#define DDR_BASE_ADDR		XPAR_S6DDR_0_S0_AXI_BASEADDR
#elif XPAR_AXI_7SDDR_0_S_AXI_BASEADDR
#define DDR_BASE_ADDR		XPAR_AXI_7SDDR_0_S_AXI_BASEADDR
#elif XPAR_MIG7SERIES_0_BASEADDR
#define DDR_BASE_ADDR		XPAR_MIG7SERIES_0_BASEADDR
#endif

#ifndef DDR_BASE_ADDR
#warning CHECK FOR THE VALID DDR ADDRESS IN XPARAMETERS.H, \
		 DEFAULT SET TO 0x01000000
#define MEM_BASE_ADDR		0x01000000
#else
#define MEM_BASE_ADDR		(DDR_BASE_ADDR + 0x1000000)
#endif

#define TX_BUFFER_BASE		(MEM_BASE_ADDR + 0x00100000)
#define RX_BUFFER_BASE		(MEM_BASE_ADDR + 0x00300000)
#define RX_BUFFER_HIGH	(MEM_BASE_ADDR + 0x004FFFFF)

unsigned char *m_dma_buffer_TX = (unsigned char*)TX_BUFFER_BASE;
unsigned char *m_dma_buffer_RX = (unsigned char*)RX_BUFFER_BASE;

//#include "/usr/local/include/opencv2/core/core.hpp"

using namespace std;

XAxiDma AxiDma;
XDocnn backsub;

int initDMA() {

	XAxiDma_Config *CfgPtr;
	CfgPtr = XAxiDma_LookupConfig(XPAR_AXIDMA_0_DEVICE_ID);
	int Status;

	if (!CfgPtr) {
		xil_printf("No config found for %d\r\n", XPAR_AXIDMA_0_DEVICE_ID);
		return XST_FAILURE;
	}

	Status = XAxiDma_CfgInitialize(&AxiDma, CfgPtr);
	if (Status != XST_SUCCESS) {
		xil_printf("Initialization failed %d\r\n", Status);
		return XST_FAILURE;
	}

	XAxiDma_IntrDisable(&AxiDma, XAXIDMA_IRQ_ALL_MASK, XAXIDMA_DEVICE_TO_DMA);
	XAxiDma_IntrDisable(&AxiDma, XAXIDMA_IRQ_ALL_MASK, XAXIDMA_DMA_TO_DEVICE);

	return XST_SUCCESS;
}

int init_backsub(){
	XDocnn_Config *CfgPtr;
		CfgPtr =  XDocnn_LookupConfig(XPAR_DOCNN_0_DEVICE_ID);
		int Status;

		if (!CfgPtr) {
			printf("No config found for %d\r\n", XPAR_DOCNN_0_DEVICE_ID);
			return XST_FAILURE;
		}

		Status = XDocnn_CfgInitialize(&backsub, CfgPtr);
		if (Status != XST_SUCCESS) {
			xil_printf("Backsub Initialization failed %d\r\n", Status);
			return XST_FAILURE;
		}
		return XST_SUCCESS;
}

int main() {
	Xil_DCacheDisable();

	printf("Started\n");

	int dma_success = initDMA();
	if (dma_success != XST_SUCCESS) {
		printf("DMA initialization failed\n");
	}

	if(init_backsub()==XST_SUCCESS)
		printf("Backsub initialized\n");
	else
		printf("Backsub initalization failed\n");


	XAxiDma_SimpleTransfer(&AxiDma,(unsigned int)frame1,sizeof(unsigned char)*288*360,XAXIDMA_DMA_TO_DEVICE);
	XAxiDma_SimpleTransfer(&axiDma,(u32)m_dma_buffer_RX,sizeof(unsigned char))*288*360,XAXIDMA_DEVICE_TO_DMA)
	return 0;
}
